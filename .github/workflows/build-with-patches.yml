name: Build act with patches

on: [push]

env:
  GO_VERSION: 1.17

jobs:
  calculate-tag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.release-tag.outputs.tag }}
      latest: ${{ steps.release-tag.outputs.latest }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true
          ref: distribution
      - id: release-tag
        name: compute release tag
        run: |
          version=$(cd act && git describe --tags --dirty --always |cut -d "-" -f 1)
          hash=$(./version-hash.sh)

          tag="${version}-${hash}"
          echo ::set-output name=tag::${tag}

          latest="$(curl -fsSLI -o /dev/null -w "%{url_effective}" https://github.com/xing/act/releases/latest)"
          latest="${latest#https://github.com/xing/act/releases/tag/}"          
          echo ::set-output name=latest::${latest}

          echo "tag: ${tag} latest: ${latest}"

  build:
    runs-on: ubuntu-latest
    needs: [calculate-tag]
    if: needs.calculate-tag.outputs.tag != needs.calculate-tag.outputs.latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          ref: distribution
      - name: setup git
        run: |
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: compile
        run: |
          make act-build

  test:
    runs-on: ubuntu-latest
    needs: [calculate-tag]
    if: needs.calculate-tag.outputs.tag != needs.calculate-tag.outputs.latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          ref: distribution
      - name: setup git
        run: |
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: docker/setup-qemu-action@v1
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - run: |
          make act-test

  tag-release:
    runs-on: ubuntu-latest
    needs: ["calculate-tag", "build", "test"]
    if: github.ref == 'refs/heads/distribution' && needs.calculate-tag.outputs.tag != needs.calculate-tag.outputs.latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true
          ref: distribution
      - name: create release tag
        run: |
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com
          make patch

          # tag version in submodule and parent
          cd act
          git tag "${{ needs.calculate-tag.outputs.tag }}"
          cd ..
          git tag "${{ needs.calculate-tag.outputs.tag }}"
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: GoReleaser
        uses: goreleaser/goreleaser-action@v1
        with:
          version: latest
          workdir: ./act
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: update patched-master branch
        run: |
          cd act
          git push --force origin patched-master
